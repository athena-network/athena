#!/usr/bin/env bash

# Copyright (c) 2018, The Athena developers
# RockSteady made this

# Put this script in /usr/bin and make it executable
# like this --> sudo chmod +x /usr/bin/turtleme

# If this is your first time compiling Athena or you think you
# may need a compiler or library, uncomment this next line to
# install the needed dependencies to compile.
# sudo apt-get install build-essential python-dev gcc g++ git cmake libboost-all-dev librocksdb-dev -y

# This command creates a folder in your home directory called Source/
# Inside this Source/ folder, we make a directory with the date
# formatted as YEAR-MONTH-DAY-HOUR-MINUTE. Hour and minute are there
# for devs who run this more than once a day. 
sourcefolder=~/Source/turtle-dev-build-$(date '+%Y-%m-%d-%H-%M')
# If you get an error here, you need to create the Source folder.
# like this --> mkdir ~/Source


# This command clears the screen, announces that we're moving our 
# working directory to ~/Source/ and then display contents, if any.
clear
echo -e "== MOVING TO ~/Source"
cd ~/Source/
ls -al

# This command announces that we are going to grab the latest copy of
# Athena from the development branch of the github repository and
# put it in the dated source folder we just created above. 
echo -e "\n== CLONING IN $sourcefolder"
git clone -b development https://github.com/athena/athena $sourcefolder

# Even though we've just cloned Athena into the dated ~/Source
# folder, we are still in ~/Source and need to move to where we just
# cloned the data, and then display the contents to make sure we
# got everything. 
cd $sourcefolder
ls -al

# To build, we like to create a folder called build/ to build inside 
# of in the Athena folder. This is not necessary, but keeps things
# looking more tidy for later if you want to trash the compile quickly.
mkdir -p $sourcefolder/build && cd $sourcefolder/build


# Let's announce that we're about to build and then do work.
echo -e "\n== BUILDING"
cmake .. && make
# You can change this to use the number of CPU cores on your system
# The recommended number is however many cores you have, minus 1.
# If you have an 8 core CPU, use this --> make -j7


# When we build, the binaries, or the executable files will be located
# in a folder called build/src, so let's move to that directory to 
# find them and then display the contents of the directory.
cd src
ls -al


# Announce that we are compressing binaries, and then use a zip archiver
# to package the daemon, miner, poolwallet, walletd and zedwallet for
# archival.
echo -e "\n\n\n== COMPRESSING BINARIES"
zip athena-dev-bin-$(date '+%Y-%m-%d-%H-%M')-linux.zip solominer legacy-services wallet Athena services

# Move the zip archive to ~/Binaries
mv *.zip ~/Binaries/

